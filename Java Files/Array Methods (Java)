/******************************************************************************
array input stores 10 integers

5 methods:
1 - display all the integers
2 - display all the integers in reverse
3 - display the sum of the integers
4 - display all values less than a limiting argument
5 - display all values that are higher than the calculated average value 

*******************************************************************************/
import java.util.Scanner;

public class Main{
    static double res = 0;
    
    public static void reverseDisplay(int [] num){
	    for(int i = num.length - 1; i >= 0; i--){
	        System.out.print(num[i] + " ");
	    }
	    
	}
	public static void sumDisplay(int [] num){
	    for(int i = 0; i < num.length; i++){
	        res += num[i];
	    }
	    System.out.println("The sum of all numbers is: " + res);
	}
	
	public static void lessLimit(int [] num){
	    for(int i = 0; i < num.length; i++){
	        
	        if(num[i] < num[0])
	            System.out.print(num[i] + " ");
	    }
	    System.out.println("are less than the limit of " + num[0]);
	}
	
	public static void getAverage(int [] num){
	    System.out.println("The average is " + res / num.length);
	}
    
    public static void greaterAverage(int [] num){
	    for(int i = 0; i < num.length; i++){
	        
	        if(num[i] > (res / num.length))
	            System.out.print(num[i] + " ");
	    }
	    System.out.println("are less than the limit of " + num[0]);
	}
    
	public static void main(String[] args) {
	     int i, lim;
	     int [] Ints = new int[10];
	     Scanner sc = new Scanner(System.in);
		 System.out.println("Input numbers:");
		
		 for(i = 0; i < Ints.length; i++){
		    Ints[i] = sc.nextInt();
		 }
		
		 lim = Ints[0];
		 System.out.println("\nInput limit: " + lim);
		 
	    reverseDisplay(Ints);
	    System.out.println("\n");
	  
	    sumDisplay(Ints);
	    System.out.println();
	    
	    lessLimit(Ints);
	    System.out.println();
	    
	    getAverage(Ints);
	    System.out.println();
	    
	    greaterAverage(Ints);
	    
	}
	
}
